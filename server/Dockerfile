FROM node:alpine AS development

WORKDIR /src/app

ARG DATABASE_URI
ENV DATABASE_URI=$DATABASE_URI

ARG PORT
ENV PORT=$PORT

ARG ACCESS_TOKEN_SECRET
ENV ACCESS_TOKEN_SECRET=$ACCESS_TOKEN_SECRET

ARG REFRESH_TOKEN_SECRET
ENV REFRESH_TOKEN_SECRET=$REFRESH_TOKEN_SECRET

ARG CLIENT_DOMAIN
ENV CLIENT_DOMAIN=$CLIENT_DOMAIN

ARG CACHE_TIME
ENV CACHE_TIME=$CACHE_TIME

COPY package*.json ./

RUN npm install


COPY . . 

# Run this command regardless so if prod is run, its cached
RUN npm run build


######################################################
FROM node:alpine as production

ARG NODE_ENV=production
ENV NODE_ENV=$NODE_ENV

ARG DATABASE_URI
ENV DATABASE_URI=$DATABASE_URI

ARG PORT
ENV PORT=$PORT

ARG ACCESS_TOKEN_SECRET
ENV ACCESS_TOKEN_SECRET=$ACCESS_TOKEN_SECRET

ARG REFRESH_TOKEN_SECRET
ENV REFRESH_TOKEN_SECRET=$REFRESH_TOKEN_SECRET

ARG CLIENT_DOMAIN
ENV CLIENT_DOMAIN=$CLIENT_DOMAIN

ARG CACHE_TIME
ENV CACHE_TIME=$CACHE_TIME

ARG ENV_FLAG
ENV ENV_FLAG=$ENV_FLAG

WORKDIR /src/app

COPY package*.json ./

RUN npm install --only=prod

COPY . .

COPY --from=development /src/app/dist ./dist

CMD ["node", "dist/main"]